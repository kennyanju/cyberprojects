# Basic Cryptography Notes

- **AES Encryption:** Uses symmetric keys, meaning the same key is used for both encryption and decryption. It is fast and suitable for securing data at rest or in transit. Example scripts are provided in Python (`aes_example.py`), PowerShell (`aes_example.ps1`), and Bash (`aes_example.sh`).
- **SHA-256:** A cryptographic one-way hashing function, ideal for verifying data integrity and storing password hashes. It is not suitable for encryption, as hashes cannot be reversed. Example scripts are provided in Python (`sha256_hash.py`), PowerShell (`sha256_hash.ps1`), and Bash (`sha256_hash.sh`).
- **Key Management:** Always use secure key storage solutions (e.g., Azure Key Vault, AWS KMS, HashiCorp Vault) in production environments to protect encryption keys from unauthorized access.
- **Best Practices:** Never hard-code keys or secrets in source code. Regularly rotate keys and use strong, randomly generated keys for all cryptographic operations.
- **Cross-Platform Support:** Scripts are available for Python, PowerShell, and Bash to demonstrate cryptographic concepts on different operating systems.
- **Educational Use:** These scripts are for learning and demonstration purposes only. For production, always follow industry standards and compliance requirements.